package com.example.test1.other;

import lombok.Getter;
import lombok.Setter;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

import java.util.Arrays;
import java.util.List;
import java.util.function.Predicate;
import java.util.stream.Collectors;
import java.util.stream.Stream;

class Test1ApplicationTests {
    @Setter
    @Getter
  static   class Stu{
    private String name;
    private Integer age;

    Stu(String name,Integer age){
        this.age=age;
        this.name=name;
    }

}

    public static void main(String[] args) {List<Stu> stuList = Arrays.asList(new Stu("a",1),new Stu("ab",3),new Stu("c",11),new Stu("f",12));

        Stream<Stu> stream = stuList.stream();
        //去除list中所有的年龄
        stream.map(Stu::getAge).forEach(System.out::println);
        //把所有年龄再返回一个集合
        List<Integer> collect = stream.map(Stu::getAge).collect(Collectors.toList());

//        stream.flatMap(stu -> test1.filterCharacter(stu.getName())).forEach(System.out::println);


        List<Integer> numbers01 = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
      Stream<Integer> strea= numbers01.stream().filter(i->{
            System.out.println(i+"abc");
            return i==3;});
        System.out.println("===");
        strea.forEach(System.out::println);
        /*===
1abc
2abc
3abc
3
4abc
5abc
6abc
7abc
8abc
9abc
10abc*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/
        /*===========================================================================================================================*/

        /*===========================================================================================================================*/
        List<Integer> numbers = Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9, 10);
        numbers.stream().filter(i->i>5).limit(5).map(i->i+100).forEach(i-> System.out.println(i));
/*
106
107
108
109
110*/

        numbers.stream().filter(i->i>5).limit(5).map(i->i+"abc").forEach(System.out::println);
/*
6abc
7abc
8abc
9abc
10abc*/
        /*===========================================================================================================================*/


    }


}
